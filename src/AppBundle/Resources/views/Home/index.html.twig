{% extends 'base.html.twig' %}
{% block title %}Home{% endblock %}

    {% block stylesheets %}
    {% endblock %}

{% block body %}
    <style>
        /* dirty */
        .center_div {
            margin: 0 auto;
            width: 80%
        }

        .marginInput {
            margin-left: 15px;
        }

        .disableButton{
            opacity: 0.35;
            background: #eee;
            color: #444;
        }


    </style>

    <div class="container center_div">
        <div ng-controller="SearchController">
            <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                <select class="mdl-textfield__input" id="type" name="type" ng-model="search.sortedBy"
                        ng-change="changeType()">
                    <option value="articles">Articles</option>
                    <option value="products">Products</option>
                </select>
                <label class="mdl-textfield__label" for="type">Vous cherchez ?</label>
            </div>
            <br>
            <div class="mdl-textfield mdl-js-textfield" ng-hide="UI()">
                <input class="mdl-textfield__input" type="text" id="sample1" ng-model="search.keyword"
                       ng-disabled="search.id || !search.sortedBy" ng-change="changeType()">
                <label class="mdl-textfield__label" for="sample1"  ng-class="{'disableButton': search.idx}">Mot clé ...</label>

            </div>
            <div class="mdl-textfield mdl-js-textfield marginInput" ng-hide="UI()">
                <input class="mdl-textfield__input " type="text" pattern="-?[0-9]*(\.[0-9]+)?" id="sample2"
                       ng-disabled="search.keyword || !search.sortedBy" ng-model="search.id" ng-change="changeType()" >
                <label class="mdl-textfield__label" for="sample2"  ng-class="{'disableButton': search.keyword}">Chercher par id ...</label>
                <span class="mdl-textfield__error">Vous devez entrer un nombre</span>
            </div>

            <br>
            <!--
        <pre>
           [[ search | json ]]
        </pre>
        -->

            <p ng-hide="result()">Résultats trouvés pour : [[search.keyword]] [[search.id]] </p>


            <!--
        <pre>
            [[ data.articles.length | json]]
        </pre>
        -->

            <div ng-if="search.id">
                <div ng-show="!data.items.error">
                    <div class="demo-card-wide mdl-card mdl-shadow--2dp">

                        <div class="mdl-card__title">
                            <h2 class="mdl-card__title-text">[[ data.items.name]]</h2>
                        </div>
                        <div class="mdl-card__supporting-text">
                            [[data.items.description]]
                        </div>
                        <div class="mdl-card__actions mdl-card--border">
                            <a class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect">
                                Read more
                            </a>
                        </div>
                        <div class="mdl-card__menu">
                            <button class="mdl-button mdl-button--icon mdl-js-button mdl-js-ripple-effect">
                                <i class="material-icons">share</i>
                            </button>
                        </div>
                    </div>
                </div>

            </div>

            <div ng-if="!search.id">
                <div ng-show="!data.items.error">
                    <p>[[ data.items.name]]</p>
                    <div class="demo-card-wide mdl-card mdl-shadow--2dp" ng-repeat="item in data.items">

                        <div class="mdl-card__title">
                            <h2 class="mdl-card__title-text">[[item.name]]</h2>
                        </div>
                        <div class="mdl-card__supporting-text">
                            [[item.description]]
                        </div>
                        <div class="mdl-card__actions mdl-card--border">
                            <a class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect">
                                Read more
                            </a>
                        </div>
                        <div class="mdl-card__menu">
                            <button class="mdl-button mdl-button--icon mdl-js-button mdl-js-ripple-effect">
                                <i class="material-icons">share</i>
                            </button>
                        </div>
                    </div>
                </div>

            </div>

            <p>[[data.items.error]]</p>



        </div>
    </div>
{% endblock %}
{% block javascripts %}
    <script>

        //avoid conflict twig with angularJS syntax
        angular.module('app', [])
                .config(['$interpolateProvider', function ($interpolateProvider) {
                    $interpolateProvider.startSymbol('[[');
                    $interpolateProvider.endSymbol(']]');
                }])


                .controller('SearchController', ['$scope', '$http', function ($scope, $http) {
                    $scope.search = {};

                    $scope.data = {
                        items: [],
                    };


                    $scope.changeType = function () {
                        /* Articles */
                        if ($scope.search.sortedBy) {
                            if ($scope.search.sortedBy === "articles") {

                                if ($scope.search.id) {
                                    //sorted articles by id
                                    //console.log("sorted by id");
                                    $http.get(`http://localhost:8000/article/${$scope.search.id}`)
                                            .then(function (response) {
                                                $scope.data.items = response.data;
                                            });
                                } else if ($scope.search.keyword) {
                                    //sorted articles by keyword (name_article)
                                    //console.log("sorted by keyword");
                                    $http.get(`http://localhost:8000/article/name/${$scope.search.keyword}`)
                                            .then(function (response) {
                                                console.log(response.data);
                                                $scope.data.items = response.data;
                                            });
                                } else {
                                    //display all articles when type articles is selected default
                                    $http.get(`http://localhost:8000/articles`)
                                            .then(function (response) {
                                                $scope.data.items = response.data;
                                            });
                                }


                            }
                            else if ($scope.search.sortedBy === "products") {
                                //get all products
                                if ($scope.search.id) {
                                    //sorted articles by id
                                   // console.log("sorted by id");
                                    $http.get(`http://localhost:8000/product/${$scope.search.id}`)
                                            .then(function (response) {
                                                $scope.data.items = response.data;
                                            });
                                } else if ($scope.search.keyword) {
                                    //sorted articles by keyword (name_article)
                                   // console.log("sorted by keyword");
                                    $http.get(`http://localhost:8000/product/name/${$scope.search.keyword}`)
                                            .then(function (response) {
                                                //console.log(response.data);
                                                $scope.data.items = response.data;
                                            });
                                } else {
                                    //display all articles when type articles is selected default
                                    $http.get(`http://localhost:8000/products`)
                                            .then(function (response) {
                                                $scope.data.items = response.data;
                                            });
                                }

                            }
                        }

                    };


                    $scope.UI = function () {
                        var display = false;
                        if ($scope.search.sortedBy) {
                            return display
                        } else {
                            return !display
                        }
                    }

                    $scope.result = function () {
                        if ($scope.search.keyword || $scope.search.id) {
                            return false;
                        } else {
                            return true
                        }
                    }



                }]);

    </script>
{% endblock %}